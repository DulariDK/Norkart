{
	"info": {
		"_postman_id": "75d02fa3-b7e8-42a9-abbf-6963505de97a",
		"name": "Norkart Document Template",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET request",
			"item": [
				{
					"name": "Get Template by Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ee99da9-b471-43c6-b9f2-9d9a0d03f13b",
								"exec": [
									"pm.test(\"Verify that Get Template by ID return Status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/DocumentTemplate/{{key}}?apitoken={{apikey}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"DocumentTemplate",
								"{{key}}"
							],
							"query": [
								{
									"key": "apitoken",
									"value": "{{apikey}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get template with merge fields by Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c044ea4-eadf-4400-b804-b1ef28630453",
								"exec": [
									"pm.test(\"Verify that the Get template with mergeField by ID Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/DocumentTemplate/{{key}}/mergeFields?apitoken={{apikey}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"DocumentTemplate",
								"{{key}}",
								"mergeFields"
							],
							"query": [
								{
									"key": "apitoken",
									"value": "{{apikey}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template stream by  Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2b35434d-58dc-47fb-85ef-2b3a1fa81aee",
								"exec": [
									"pm.test(\"Verify that the Get templateStream by ID Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/DocumentTemplate/{{key}}/stream?apitoken={{apikey}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"DocumentTemplate",
								"{{key}}",
								"stream"
							],
							"query": [
								{
									"key": "apitoken",
									"value": "{{apikey}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All templates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "94432bc9-29b3-4a8e-9ca2-fd52c6cde2e1",
								"exec": [
									"pm.test(\"Verify that the Get all template Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/DocumentTemplate?moduleId={{moduleID}}&apitoken={{apikey}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"DocumentTemplate"
							],
							"query": [
								{
									"key": "moduleId",
									"value": "{{moduleID}}"
								},
								{
									"key": "apitoken",
									"value": "{{apikey}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Merge Fields by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0100bc2d-217b-408e-b262-d4e4febc2fcc",
								"exec": [
									"pm.test(\"Verify that the Get MergeFields by ID Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/MergeFields/{{id}}?apitoken={{apikey}}  \n",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"MergeFields",
								"{{id}}"
							],
							"query": [
								{
									"key": "apitoken",
									"value": "{{apikey}}  \n"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Module",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b6533afd-0f2e-4289-9807-0ea5653b0d92",
								"exec": [
									"pm.test(\"Verify that the Get all module Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/Module?apitoken={{apikey}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"Module"
							],
							"query": [
								{
									"key": "apitoken",
									"value": "{{apikey}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Batch Job status by Job ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "30271271-0623-4e32-a443-6cbf1dca1457",
								"exec": [
									"pm.test(\"Verify that the Get batchjob by jobID has 200 as status code\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/BatchJob/status/{{BatchjobID}}?apitoken={{apikey}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"BatchJob",
								"status",
								"{{BatchjobID}}"
							],
							"query": [
								{
									"key": "apitoken",
									"value": "{{apikey}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "POST request",
			"item": [
				{
					"name": "Create new Case category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9c58492c-561a-4cbf-90ad-8469715298e5",
								"exec": [
									"pm.test(\"Verify that the  Archive case category Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"navn\": \"string\",\r\n  \"mappetype\": \"string\",\r\n  \"statusNySaksmappe\": \"string\",\r\n  \"statusAvsluttSaksmappe\": \"string\",\r\n  \"arkivdel\": \"string\",\r\n  \"klasseListe\": [\r\n    {\r\n      \"klassifikasjonssystem\": \"string\",\r\n      \"klasseID\": \"string\",\r\n      \"rekkefolge\": \"string\"\r\n    }\r\n  ],\r\n  \"journalpostKategori\": [\r\n    {\r\n      \"ekspederFoerEndeligStatus\": true,\r\n      \"forfallAntallDager\": \"string\",\r\n      \"navn\": \"string\",\r\n      \"nyJournalpostArkiveringStatus\": \"string\"\r\n    }\r\n  ],\r\n  \"lukkSak\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/ArchiveCaseCategory?apitoken={{apikey}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"ArchiveCaseCategory"
							],
							"query": [
								{
									"key": "apitoken",
									"value": "{{apikey}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new batch job",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "967d8ac2-06fc-4647-ac6a-fdb812d1f4f7",
								"exec": [
									"pm.test(\"Verify that the create new batch job Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"isSendToSvarUT\": true,\r\n  \"isArchived\": true,\r\n  \"templateKey\": \"string\",\r\n  \"documentDataList\": [\r\n    {\r\n      \"moduleData\": \"string\",\r\n      \"objectId\": \"string\"\r\n    }\r\n  ],\r\n  \"editableContents\": [\r\n    {\r\n      \"mergeFieldId\": 0,\r\n      \"content\": \"string\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/BatchJob?apitoken={{apikey}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"BatchJob"
							],
							"query": [
								{
									"key": "apitoken",
									"value": "{{apikey}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Complete batch job",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7da601f-bee8-4681-aa12-7b41df5b036c",
								"exec": [
									"pm.test(\"Verify complete batch job Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"string\",\n        \"topic\": \"string\",\n        \"subject\": \"string\",\n        \"eventType\": \"string\",\n        \"eventTime\": \"2020-05-19T09:02:00.682Z\",\n        \"metadataVersion\": \"string\",\n        \"dataVersion\": \"string\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/BatchJob/complete?apitoken={{apikey}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"BatchJob",
								"complete"
							],
							"query": [
								{
									"key": "apitoken",
									"value": "{{apikey}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate New document ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e0d64ff3-1b5a-45c1-811a-3d85d4ec630f",
								"exec": [
									"pm.test(\"Verify generate new document Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"isSendToSvarUT\": true,\r\n\t\"isArchived\": true,\r\n\t\"templateKey\": \"TestKey01\",\r\n\t\"editableContents\":[{\"Content\":\"This propety belongs to {{CompalainantName}} edited test\", \"MergeFieldID\":11},{\"Content\":\"This test property belogns to {{ComplainantName}} edited\",\"MergeFielId\":12}],\r\n\t\"documentData\":\r\n\t\t{\r\n\t\t\t\"moduleData\": \"{\\\"ComplainantName\\\":\\\"David\\\",\\\"ComplainantAddress\\\":\\\"Tronhein\\\",\\\"ComplaintAddress\\\":\\\"Oslo, Norway\\\",\\\"ComplaintCategory\\\":\\\"Poor area\\\",\\\"Date\\\":\\\"2020\\/02\\/28\\\",\\\"GroundForTheComplaint\\\":\\\"Wrong estimation\\\"}\",\r\n\t\t\t\"objectId\": \"2\",\r\n\r\n\t\t\t\"recipientAddress\": {\r\n\t\t\t\t\"Name\": \"DEV\",\r\n\t\t\t\t\"Address1\": \"adfasd1\",\r\n\t\t\t\t\"Address2\": \"dfderw2\",\r\n\t\t\t\t\"Address3\": \"zxcxcxv3\",\r\n\t\t\t\t\"Country\": \"cccMNBVC\",\r\n\t\t\t\t\"zipCode\": \"0099\",\r\n\t\t\t\t\"city\": \"zxzx\",\r\n\t\t\t\t\"birthNumber\": \"24079495855\"\r\n\t\t\t}\r\n\t\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/Documente?apitoken={{apikey}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"Documente"
							],
							"query": [
								{
									"key": "apitoken",
									"value": "{{apikey}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new document template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f1925ba2-1b1b-452e-996b-c5b7d106b0fb",
								"exec": [
									"pm.test(\"Verify create new document template Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"title\": \"new tittle\",\r\n\"Name\": \"Original doc  template new\",\r\n\"DocumentUrl\": \"\",\r\n\"Document\": \"\",\r\n\"ModuleId\": 6,\r\n\"DocumentTemplates\": [],\r\n\"MergeFields\": [\r\n{\r\n\"id\": 0,\r\n\"name\": \"{{Namenew}}\",\r\n\"defaultContent\": \"\",\r\n\"hasDefaultContent\": false,\r\n\"isRequired\": true,\r\n\"mergeFieldTypeId\": 1,\r\n\"defaultTemplateId\": 0\r\n\r\n},\r\n{\r\n\"id\": 0,\r\n\"name\": \"{{ComplaintDatenew}}\",\r\n\"defaultContent\": \"\",\r\n\"hasDefaultContent\": false,\r\n\"isRequired\": true,\r\n\"mergeFieldTypeId\": 1,\r\n\"defaultTemplateId\": 0\r\n}\r\n]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/DocumentTemplate?apitoken={{apikey}} ",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"DocumentTemplate"
							],
							"query": [
								{
									"key": "apitoken",
									"value": "{{apikey}} "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Merge fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56f9d5c9-59bc-433e-97b7-d1a634e9739b",
								"exec": [
									"pm.test(\"Verify that the create merge fields Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"name\": \"string\",\r\n  \"defaultContent\": \"string\",\r\n  \"hasDefaultContent\": true,\r\n  \"isRequired\": true,\r\n  \"mergeFieldTypeId\": 0,\r\n  \"defaultTemplateId\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/MergeFields?apitoken={{apikey}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"MergeFields"
							],
							"query": [
								{
									"key": "apitoken",
									"value": "{{apikey}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Document Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f509856-396e-47ca-9aa9-034e633c9558",
								"exec": [
									"pm.test(\"Verify that the Get Document Status has 201 as status code\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"objectIds\": [\r\n    \"1\"\r\n  ],\r\n  \"startDate\": \"2020-02-15\",\r\n  \"endDate\": \"2020-04-16\",\r\n  \"batchJobId\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/Document/RetrieveDocumentListStatus?apitoken={{apikey}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"Document",
								"RetrieveDocumentListStatus"
							],
							"query": [
								{
									"key": "apitoken",
									"value": "{{apikey}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PUT request ",
			"item": [
				{
					"name": "Update existing template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7173e23a-38a9-47ff-bdba-b1c91edd53dd",
								"exec": [
									"pm.test(\"Verify that the update existing template Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"title\": \"string\",\r\n  \"key\": \"string\",\r\n  \"name\": \"string\",\r\n  \"documentUrl\": \"string\",\r\n  \"document\": \"string\",\r\n  \"moduleId\": 0,\r\n  \"mergeFields\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\",\r\n      \"defaultContent\": \"string\",\r\n      \"hasDefaultContent\": true,\r\n      \"isRequired\": true,\r\n      \"mergeFieldTypeId\": 0,\r\n      \"defaultTemplateId\": 0\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/DocumentTemplate/{{id}}?apitoken={{apikey}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"DocumentTemplate",
								"{{id}}"
							],
							"query": [
								{
									"key": "apitoken",
									"value": "{{apikey}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a merge field",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51f95197-4169-402d-86ca-1148823b06d6",
								"exec": [
									"pm.test(\"Verify that the update merge fields Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"name\": \"string\",\r\n  \"defaultContent\": \"string\",\r\n  \"hasDefaultContent\": true,\r\n  \"isRequired\": true,\r\n  \"mergeFieldTypeId\": 0,\r\n  \"defaultTemplateId\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/MergeFields/{{id}}?apitoken={{apikey}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"MergeFields",
								"{{id}}"
							],
							"query": [
								{
									"key": "apitoken",
									"value": "{{apikey}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update merge fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d901e29-074b-480e-a685-bacbde607798",
								"exec": [
									"pm.test(\"Verify that the update merge fields Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"mergeFieldId\": 0,\r\n    \"content\": \"string\"\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/MergeFields/template/{{key}}?apitoken={{apikey}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"MergeFields",
								"template",
								"{{key}}"
							],
							"query": [
								{
									"key": "apitoken",
									"value": "{{apikey}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DEL request",
			"item": [
				{
					"name": "Delete a merge field",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cdf731bc-ec18-45a1-9a8f-c7dbfa5e1d74",
								"exec": [
									"pm.test(\"Verify that the Delete merge field Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{server}}/api/MergeFields/{{id}}?apitoken={{apikey}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"MergeFields",
								"{{id}}"
							],
							"query": [
								{
									"key": "apitoken",
									"value": "{{apikey}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f0813439-02fa-49c9-9fac-3ee15a6fb6a3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e1f8f0d9-ea24-49f8-9eeb-307f519816c8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}